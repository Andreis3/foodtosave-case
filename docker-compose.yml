name: store

services:
#  author-ms:
#    container_name: author-ms
#    build:
#      target: builder
#      context: .
#    ports:
#      - "8080:8080"
#    depends_on:
#        - postgres
#        - redis
#    environment:
#      SERVER_PORT: "8080"
#      POSTGRES_HOST: "localhost"
#      POSTGRES_PORT: "5432"
#      POSTGRES_USER: "root"
#      POSTGRES_PASSWORD: "root"
#      POSTGRES_DB_NAME: "food_db"
#      POSTGRES_MAX_CONNECTIONS: "50"
#      POSTGRES_MIN_CONNECTIONS: "5"
#      POSTGRES_MAX_CONN_LIFETIME: "100"
#      POSTGRES_MAX_CONN_IDLE_TIME: "1"
#      REDIS_HOST: "localhost"
#      REDIS_PORT: "6379"
#      REDIS_PASSWORD: ""
#      REDIS_DB: "0"
#    entrypoint: ["/go/bin/author-ms"]

  postgres:
      container_name: postgres
      image: postgres:16.2
      environment:
        POSTGRES_USER: root
        POSTGRES_PASSWORD: root
        POSTGRES_DB: food_db
      ports:
        - "5432:5432"
      volumes:
        - ./docs/sql/food_db.sql:/docker-entrypoint-initdb.d/init.sql
      command: >
        postgres -c 'max_connections=200'
                 -c 'work_mem=50MB'
                 -c 'maintenance_work_mem=1GB'
  redis:
    image: redis:6.0.9
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    command: redis-server --appendonly yes

#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    ports:
#      - 9090:9090
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - 3000:3000
#    depends_on:
#      - prometheus
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#      - GF_SECURITY_ADMIN_USER=admin